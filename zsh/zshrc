# Source functions for devbox / other laptops
if [ -f "$HOME/.config/dotfiles/lib/shared.sh" ]; then
  source "$HOME/.config/dotfiles/lib/shared.sh"
fi

# Source functions for laptop
if [ -f "$HOME/stripe/dotfiles/lib/shared.sh" ]; then
  source "$HOME/stripe/dotfiles/lib/shared.sh"
fi

if is_stripe_machine; then
  export XDG_CACHE_HOME="$HOME/stripe/.cache"
  mkdir -p "$XDG_CACHE_HOME"
fi

export PATH="$HOME/.local/bin:$PATH"

source_if_exists ~/.zshenv

export TERM="xterm-256color"

# Disable auto title so tmux window titles don't get messed up.
export DISABLE_AUTO_TITLE="true"

# Maintain a stack of cd directory traversals for `popd`
setopt AUTO_PUSHD

# Allow extended matchers like ^file, etc
set -o EXTENDED_GLOB

# ╭──────────────────────────────────────────────────────────╮
# │ History settings                                         │
# ╰──────────────────────────────────────────────────────────╯
setopt append_history
setopt hist_expire_dups_first
setopt hist_ignore_dups
setopt hist_ignore_space
setopt inc_append_history
setopt extended_glob

# Use viins keymap as the default.
bindkey -v

# ╭──────────────────────────────────────────────────────────╮
# │ Completion                                               │
# ╰──────────────────────────────────────────────────────────╯
# Tell Stripe's init script to skip its compinit call
export __STRIPE_SHELLINIT_ZSH_SKIP_COMPINIT=1

function setup_completion() {
  # Load completion system
  autoload -Uz compinit

  # Only regenerate completions once per day
  if [[ -n ${ZDOTDIR:-$HOME}/.zcompdump(#qN.mh+24) ]]; then
    compinit
  else
    compinit -C  # Skip security check for speed
  fi

  # Basic settings for better completion experience
  zstyle ':completion:*' menu select
  zstyle ':completion:*' matcher-list 'm:{a-z}={A-Z}'

  # Load bash completion compatibility if needed
  autoload -Uz bashcompinit
  bashcompinit
}

# Call the function once
setup_completion

# ╭──────────────────────────────────────────────────────────╮
# │ Plugins                                                  │
# ╰──────────────────────────────────────────────────────────╯
if is_stripe_devbox; then
  export ZPLUG_BIN="/usr/share/zplug/bin"
  export ZPLUG_HOME="$(xdg_data_dir)/zplug"
  mkdir -p "$ZPLUG_HOME"

  source /usr/share/zplug/init.zsh
elif is_arch_linux ; then
  source ~/.zplug/init.zsh
else
  export ZPLUG_HOME="$(brew --prefix)/opt/zplug"
  source "$ZPLUG_HOME/init.zsh"
fi

zplug "dbalatero/fzf-git"
zplug "MichaelAquilina/zsh-you-should-use"
zplug "twang817/zsh-ssh-agent"
zplug "dbalatero/fast-syntax-highlighting"
zplug "hlissner/zsh-autopair"
zplug "chriskempson/base16-shell"
zplug "plugins/git", from:oh-my-zsh

if ! zplug check; then
  zplug install
fi

zplug load

# ╭──────────────────────────────────────────────────────────╮
# │ More history                                             │
# ╰──────────────────────────────────────────────────────────╯
HISTSIZE="10000"
SAVEHIST="10000"

HISTFILE="$HOME/.local/share/zsh/history"
mkdir -p "$(dirname "$HISTFILE")"

setopt HIST_FCNTL_LOCK
setopt HIST_IGNORE_DUPS
unsetopt HIST_IGNORE_ALL_DUPS
setopt HIST_IGNORE_SPACE
unsetopt HIST_EXPIRE_DUPS_FIRST
setopt SHARE_HISTORY
setopt EXTENDED_HISTORY

export FZF_DEFAULT_COMMAND="$HOME/.local/bin/fzf-fast-file-search"
export FZF_CTRL_T_COMMAND="$FZF_DEFAULT_COMMAND"

if [[ $options[zle] = on ]]; then
  eval "$(fzf --zsh)"
fi

# ╭──────────────────────────────────────────────────────────╮
# │ Stripe                                                   │
# ╰──────────────────────────────────────────────────────────╯
source_if_exists ~/.stripe/shellinit/zshrc

if is_stripe_devbox; then
  source_if_exists /usr/share/autojump/autojump.sh
elif is_arch_linux; then
  source_if_exists /usr/share/autojump/autojump.zsh
else
  source_if_exists "$(brew --prefix)/etc/profile.d/autojump.sh"
fi

# Use jk to exit insert mode on the command line
bindkey -M viins 'jk' vi-cmd-mode

# Set vi mode AGAIN
bindkey -v

# ╭──────────────────────────────────────────────────────────╮
# │ Secrets                                                  │
# ╰──────────────────────────────────────────────────────────╯
for file in $HOME/.zsh/secrets/**/*.zsh
do
  source $file
done

# Stripe already inits nodenv, rbenv, direnv, and pyenv in shellinit... :(
if [[ -z "${__STRIPE_SHELLINIT_ZSH_COMPLETE}" ]]; then
  # node, py, ruby
  export PYENV_ROOT="$HOME/.local/share/pyenv"
  if command_exists "pyenv"; then
    eval "$(pyenv virtualenv-init -)"
    eval "$(pyenv init -)"
  fi

  eval "$(nodenv init -)"
  eval "$(rbenv init - zsh)"
  eval "$(direnv hook zsh)"
fi

# aliases
alias -- 6='exec zsh'
alias -- b='work begin'
alias -- dev='tn start remote'
alias -- eza='eza '
alias -- l='ls -al'
alias -- la='eza -a'
alias -- ll='eza -l'
alias -- lla='eza -la'
alias -- ls=eza
alias -- lt='eza --tree'
alias -- p='work pr show'
alias -- r='work review'
alias -- tk='tmux kill-session'
alias -- tn=tmuxinator
alias -- vim=nvim
alias -- weather='curl wttr.in'


export EDITOR="nvim"
export NVIM_TUI_ENABLE_TRUE_COLOR="1"

# Tmux UTF8 support
export LANG="en_US.UTF-8"
export LC_CTYPE="en_US.UTF-8"

# Fix GPG's bullshit
export GPG_TTY="$(tty)"

export HOMEBREW_NO_AUTO_UPDATE="1"

export TMUX_PLUGIN_MANAGER_PATH="~/.local/share/tmux/plugins"

# Restic/Backblaze
# restic mount -r $SYNC_REPO ~/backblaze
export RESTIC_REPOSITORY="b2:dbalatero-backup"
export SYNC_REPO="$RESTIC_REPOSITORY:/Sync"
export FREEZE_REPO="$RESTIC_REPOSITORY:/Freeze"

export PATH="./node_modules/.bin:$HOME/.config/base16-shell:$PATH"

if is_stripe_machine; then
  export PATH="$PATH:$HOME/stripe/work/exe"
  export PATH="$HOME/stripe/mason/bin:$PATH"

  [ -x "$HOME/stripe/st/exe/st" ] && eval "$($HOME/stripe/st/exe/st shell)"
fi

if is_stripe_laptop; then
  function new-devbox() {
    pay remote new "$1" \
      --host-type qa-mydev-graviton \
      --service sorbet-lsp \
      --repo stripe-internal/pay-server:master \
      --ide none \
      --no-notify-on-ready \
      --skip-confirm
  }

  function pay() {
    case "$*" in
      "remote ssh "*)
        # Extract hostname (everything after "remote ssh ")
        hostname="${@:3:1}"
        echo "Running faster ssh: pay --name $hostname ssh"
        command pay --name "$hostname" ssh
        ;;
      *)
        # Pass through to original command
        command pay "$@"
        ;;
    esac
  }

  function sgit() {
    GIT_SSH_COMMAND='ssh -i ~/.ssh/github_stripe -o IdentitiesOnly=yes' git "$@"
  }
fi

if command_exists starship ; then
  eval "$(starship init zsh)"
else
  echo "starship is not installed, falling back to default ZSH prompt"
fi
